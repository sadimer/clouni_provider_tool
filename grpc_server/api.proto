syntax = "proto3";

service ClouniProviderTool {
    rpc ClouniProviderTool(ClouniProviderToolRequest) returns (ClouniProviderToolResponse) {}
}

service ClouniConfigurationTool {
    rpc ClouniConfigurationTool(ClouniConfigurationToolRequest) returns (ClouniConfigurationToolResponse) {}
}

// ClouniProviderTool request
// Fields are specified in Clouni help

message ClouniProviderToolRequest {
    string template_file_content = 1;
    string cluster_name = 2;
    bool validate_only = 3;
    bool delete = 4;
    string provider = 5;
    string configuration_tool = 6;
    string extra = 7;
    string log_level = 8;
    bool debug = 9;
    string host_parameter = 10;
    string public_key_path = 11;
    string configuration_tool_endpoint = 12;
    string grpc_cotea_endpoint = 13;
    string database_api_endpoint = 14;
}

// ClouniProviderTool response
//      Status: TEMPLATE_VALID - returned for validate-only requests if template is valid
//              TEMPLATE_INVALID - returned for validate-only requests if template is invalid
//              OK - returned for normal execution of non-validate-only request
//              ERROR - returned if any error occured
//      Error: error description(only with ERROR status)
//      Content: content of proceeded template file(only with OK status)

message ClouniProviderToolResponse {
    enum Status {
        TEMPLATE_VALID = 0;
        TEMPLATE_INVALID = 1;
        OK = 2;
        ERROR = 3;
    }
    Status status = 1;
    string error = 2;
    string content = 3;
}

// ClouniProviderTool request
// Fields are specified in Clouni help

message ClouniConfigurationToolRequest {
    string provider_template = 1;
    string cluster_name = 2;
    bool validate_only = 3;
    bool delete = 4;
    string configuration_tool = 5;
    string extra = 6;
    string log_level = 7;
    bool debug = 8;
    string database_api_endpoint = 9;
    string grpc_cotea_endpoint = 10;
}

message ClouniConfigurationToolResponse {
    enum Status {
        TEMPLATE_VALID = 0;
        TEMPLATE_INVALID = 1;
        OK = 2;
        ERROR = 3;
    }
    Status status = 1;
    string error = 2;
    string content = 3;
}