- tasks:
  - name: Create OpenStack component keypair
    os_keypair:
      name: testing_tosca_keypair
      public_key: '{{ lookup(''file'', ''~/.ssh/id_rsa.pub'') }}'
    register: testing_tosca_keypair
  - set_fact:
      testing_tosca_keypair_list: '{{ testing_tosca_keypair_list | default([]) }}
        + [ "{{ item.id }}" ]'
    loop: '{{ testing_tosca_keypair.results | flatten(levels=1)  }}'
    when: item.id  is defined
  - set_fact:
      testing_tosca_keypair_list: '{{ testing_tosca_keypair_list | default([]) }}
        + [ "{{ item.keypair_ids[0] }}" ]'
    loop: '{{ testing_tosca_keypair.results | flatten(levels=1)  }}'
    when: item.keypair_ids is defined
  - set_fact:
      testing_tosca_keypair_list:
        testing_tosca_keypair_ids: '{{ testing_tosca_keypair_list }}'
    when: testing_tosca_keypair_list is defined
  - lineinfile:
      path: /home/sadimer/Desktop/clouni_configuration_tool/grpc_server/id_vars_example.yaml
      line: 'testing_tosca_keypair_delete: {{ testing_tosca_keypair.id }}'
    when: testing_tosca_keypair.id is defined
  - lineinfile:
      path: /home/sadimer/Desktop/clouni_configuration_tool/grpc_server/id_vars_example.yaml
      line: 'testing_tosca_keypair_delete: {{ testing_tosca_keypair.keypair_id }}'
    when: testing_tosca_keypair.keypair_id is defined
  - lineinfile:
      path: /home/sadimer/Desktop/clouni_configuration_tool/grpc_server/id_vars_example.yaml
      line: 'testing_tosca_keypair_delete: {{ testing_tosca_keypair.keypair.id }}'
    when: testing_tosca_keypair.keypair.id is defined
  - lineinfile:
      path: /home/sadimer/Desktop/clouni_configuration_tool/grpc_server/id_vars_example.yaml
      line: '{{ testing_tosca_keypair_list | to_nice_yaml }}'
    when: testing_tosca_keypair_list is defined
  - fail:
      msg: Variable testing_tosca_keypair is undefined! So it will not be deleted
    when: testing_tosca_keypair_list is undefined and testing_tosca_keypair.id is
      undefined
    ignore_errors: true
  hosts: localhost
  name: 'Create OpenStack component openstack cluster: testing_tosca_keypair:create'
- tasks:
  - name: Create OpenStack component security group
    os_security_group:
      name: testing_tosca_security_group
    register: testing_tosca_security_group
  - set_fact:
      testing_tosca_security_group_list: '{{ testing_tosca_security_group_list | default([])
        }} + [ "{{ item.id }}" ]'
    loop: '{{ testing_tosca_security_group.results | flatten(levels=1)  }}'
    when: item.id  is defined
  - set_fact:
      testing_tosca_security_group_list: '{{ testing_tosca_security_group_list | default([])
        }} + [ "{{ item.security_group_ids[0] }}" ]'
    loop: '{{ testing_tosca_security_group.results | flatten(levels=1)  }}'
    when: item.security_group_ids is defined
  - set_fact:
      testing_tosca_security_group_list:
        testing_tosca_security_group_ids: '{{ testing_tosca_security_group_list }}'
    when: testing_tosca_security_group_list is defined
  - lineinfile:
      path: /home/sadimer/Desktop/clouni_configuration_tool/grpc_server/id_vars_example.yaml
      line: 'testing_tosca_security_group_delete: {{ testing_tosca_security_group.id
        }}'
    when: testing_tosca_security_group.id is defined
  - lineinfile:
      path: /home/sadimer/Desktop/clouni_configuration_tool/grpc_server/id_vars_example.yaml
      line: 'testing_tosca_security_group_delete: {{ testing_tosca_security_group.security_group_id
        }}'
    when: testing_tosca_security_group.security_group_id is defined
  - lineinfile:
      path: /home/sadimer/Desktop/clouni_configuration_tool/grpc_server/id_vars_example.yaml
      line: 'testing_tosca_security_group_delete: {{ testing_tosca_security_group.security.id
        }}'
    when: testing_tosca_security_group.security.id is defined
  - lineinfile:
      path: /home/sadimer/Desktop/clouni_configuration_tool/grpc_server/id_vars_example.yaml
      line: 'testing_tosca_security_group_delete: {{ testing_tosca_security_group.group.id
        }}'
    when: testing_tosca_security_group.group.id is defined
  - lineinfile:
      path: /home/sadimer/Desktop/clouni_configuration_tool/grpc_server/id_vars_example.yaml
      line: '{{ testing_tosca_security_group_list | to_nice_yaml }}'
    when: testing_tosca_security_group_list is defined
  - fail:
      msg: Variable testing_tosca_security_group is undefined! So it will not be deleted
    when: testing_tosca_security_group_list is undefined and testing_tosca_security_group.id
      is undefined
    ignore_errors: true
  hosts: localhost
  name: 'Create OpenStack component openstack cluster: testing_tosca_security_group:create'
- tasks:
  - name: Create OpenStack component server
    os_server:
      auto_ip: false
      boot_from_volume: false
      reuse_ips: true
      config_drive: false
      meta: cube_master=true
      name: testing_tosca_{{ item }}
      nics:
      - net-name: test_ext
      key_name: testing_tosca_keypair
      flavor: 3d7e6639-730d-4bac-aebd-60b1baa2dd70
      security_groups:
      - testing_tosca_security_group
      image: Debian-10-amd64
    register: testing_tosca_server
    with_sequence: start=1 end=2 format=%d
  - set_fact:
      ansible_user: debian
    with_sequence: start=1 end=2 format=%d
  - set_fact:
      group: testing_tosca_server_private_address
    with_sequence: start=1 end=2 format=%d
  - set_fact:
      host_ip: '{{ host_ip | default([]) + [[ "testing_tosca_private_address_" + item,
        testing_tosca_server.results[item | int - 1].server.public_v4 ]] }}'
    with_sequence: start=1 end=2 format=%d
  - include: /home/sadimer/Desktop/ISPRAS/grpc-cotea/example/artifacts/add_host.yaml
  - set_fact:
      testing_tosca_server_list: '{{ testing_tosca_server_list | default([]) }} +
        [ "{{ item.id }}" ]'
    loop: '{{ testing_tosca_server.results | flatten(levels=1)  }}'
    when: item.id  is defined
  - set_fact:
      testing_tosca_server_list: '{{ testing_tosca_server_list | default([]) }} +
        [ "{{ item.server_ids[0] }}" ]'
    loop: '{{ testing_tosca_server.results | flatten(levels=1)  }}'
    when: item.server_ids is defined
  - set_fact:
      testing_tosca_server_list:
        testing_tosca_server_ids: '{{ testing_tosca_server_list }}'
    when: testing_tosca_server_list is defined
  - lineinfile:
      path: /home/sadimer/Desktop/clouni_configuration_tool/grpc_server/id_vars_example.yaml
      line: 'testing_tosca_server_delete: {{ testing_tosca_server.id }}'
    when: testing_tosca_server.id is defined
  - lineinfile:
      path: /home/sadimer/Desktop/clouni_configuration_tool/grpc_server/id_vars_example.yaml
      line: 'testing_tosca_server_delete: {{ testing_tosca_server.server_id }}'
    when: testing_tosca_server.server_id is defined
  - lineinfile:
      path: /home/sadimer/Desktop/clouni_configuration_tool/grpc_server/id_vars_example.yaml
      line: 'testing_tosca_server_delete: {{ testing_tosca_server.server.id }}'
    when: testing_tosca_server.server.id is defined
  - lineinfile:
      path: /home/sadimer/Desktop/clouni_configuration_tool/grpc_server/id_vars_example.yaml
      line: '{{ testing_tosca_server_list | to_nice_yaml }}'
    when: testing_tosca_server_list is defined
  - fail:
      msg: Variable testing_tosca_server is undefined! So it will not be deleted
    when: testing_tosca_server_list is undefined and testing_tosca_server.id is undefined
    ignore_errors: true
  hosts: localhost
  name: 'Create OpenStack component openstack cluster: testing_tosca_server:create'
- tasks:
  - name: Create OpenStack component security group rule
    os_security_group_rule:
      direction: '{{ initiator[item | int] | default(omit) }}'
      ethertype: IPv4
      port_range_max: '{{ port[item | int] | default(omit) }}'
      port_range_min: '{{ port[item | int] | default(omit) }}'
      protocol: '{{ protocol[item | int] | default(omit) }}'
      remote_ip_prefix: 0.0.0.0
      security_group: testing_tosca_security_group
    register: testing_tosca_security_group_rule
    vars:
      initiator:
      - ingress
      port:
      - 22
      protocol:
      - tcp
    with_sequence: start=0 end={{ [protocol | length, port | length, initiator | length]
      | max - 1 }} format=%d
  - set_fact:
      testing_tosca_security_group_rule_list: '{{ testing_tosca_security_group_rule_list
        | default([]) }} + [ "{{ item.id }}" ]'
    loop: '{{ testing_tosca_security_group_rule.results | flatten(levels=1)  }}'
    when: item.id  is defined
  - set_fact:
      testing_tosca_security_group_rule_list: '{{ testing_tosca_security_group_rule_list
        | default([]) }} + [ "{{ item.security_group_rule_ids[0] }}" ]'
    loop: '{{ testing_tosca_security_group_rule.results | flatten(levels=1)  }}'
    when: item.security_group_rule_ids is defined
  - set_fact:
      testing_tosca_security_group_rule_list:
        testing_tosca_security_group_rule_ids: '{{ testing_tosca_security_group_rule_list
          }}'
    when: testing_tosca_security_group_rule_list is defined
  - lineinfile:
      path: /home/sadimer/Desktop/clouni_configuration_tool/grpc_server/id_vars_example.yaml
      line: 'testing_tosca_security_group_rule_delete: {{ testing_tosca_security_group_rule.id
        }}'
    when: testing_tosca_security_group_rule.id is defined
  - lineinfile:
      path: /home/sadimer/Desktop/clouni_configuration_tool/grpc_server/id_vars_example.yaml
      line: 'testing_tosca_security_group_rule_delete: {{ testing_tosca_security_group_rule.security_group_rule_id
        }}'
    when: testing_tosca_security_group_rule.security_group_rule_id is defined
  - lineinfile:
      path: /home/sadimer/Desktop/clouni_configuration_tool/grpc_server/id_vars_example.yaml
      line: 'testing_tosca_security_group_rule_delete: {{ testing_tosca_security_group_rule.security.id
        }}'
    when: testing_tosca_security_group_rule.security.id is defined
  - lineinfile:
      path: /home/sadimer/Desktop/clouni_configuration_tool/grpc_server/id_vars_example.yaml
      line: 'testing_tosca_security_group_rule_delete: {{ testing_tosca_security_group_rule.group.id
        }}'
    when: testing_tosca_security_group_rule.group.id is defined
  - lineinfile:
      path: /home/sadimer/Desktop/clouni_configuration_tool/grpc_server/id_vars_example.yaml
      line: 'testing_tosca_security_group_rule_delete: {{ testing_tosca_security_group_rule.rule.id
        }}'
    when: testing_tosca_security_group_rule.rule.id is defined
  - lineinfile:
      path: /home/sadimer/Desktop/clouni_configuration_tool/grpc_server/id_vars_example.yaml
      line: '{{ testing_tosca_security_group_rule_list | to_nice_yaml }}'
    when: testing_tosca_security_group_rule_list is defined
  - fail:
      msg: Variable testing_tosca_security_group_rule is undefined! So it will not
        be deleted
    when: testing_tosca_security_group_rule_list is undefined and testing_tosca_security_group_rule.id
      is undefined
    ignore_errors: true
  hosts: localhost
  name: 'Create OpenStack component openstack cluster: testing_tosca_security_group_rule:create'
- tasks:
  - name: Create OpenStack component floating ip
    os_floating_ip:
      floating_ip_address: 10.100.150.11
      server: testing_tosca_{{ item }}
      network: ispras
    register: testing_tosca_floating_ip
    with_sequence: start=1 end=2 format=%d
  - set_fact:
      ansible_user: debian
    with_sequence: start=1 end=2 format=%d
  - set_fact:
      group: testing_tosca_server_public_address
    with_sequence: start=1 end=2 format=%d
  - set_fact:
      host_ip: '{{ host_ip | default([]) + [[ "testing_tosca_public_address_" + item,
        testing_tosca_floating_ip.results[item | int - 1].floating_ip.floating_ip_address
        ]] }}'
    with_sequence: start=1 end=2 format=%d
  - include: /home/sadimer/Desktop/ISPRAS/grpc-cotea/example/artifacts/add_host.yaml
  - set_fact:
      testing_tosca_floating_ip_dict:
        floating_ip_address: '{{ item.floating_ip.floating_ip_address }}'
        server: '{{ item.floating_ip.port_details.device_id }}'
        purge: 'yes'
        state: absent
    with_items: '{{ testing_tosca_floating_ip.results }}'
    when: testing_tosca_floating_ip is defined
    register: tmp
  - set_fact:
      testing_tosca_floating_ip_dicts: '{{ testing_tosca_floating_ip_dicts | default([])
        + [item.ansible_facts.testing_tosca_floating_ip_dict] }}'
    with_items: '{{ tmp.results }}'
    when: testing_tosca_floating_ip_dict is defined
  - lineinfile:
      path: /home/sadimer/Desktop/clouni_configuration_tool/grpc_server/id_vars_example.yaml
      line: 'testing_tosca_floating_ip_dicts:

        {{ testing_tosca_floating_ip_dicts | to_nice_yaml }}'
    when: testing_tosca_floating_ip_dicts is defined
  hosts: localhost
  name: 'Create OpenStack component openstack cluster: testing_tosca_floating_ip:create'
- tasks:
  - include: /home/sadimer/Desktop/ISPRAS/grpc-cotea/example/artifacts/ansible-operation-example.yaml
  hosts: testing_tosca_server_public_address
  name: 'Create OpenStack component openstack cluster: software_for_cumulus_software_component:create'
